// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SampleApp.Core.Data;

namespace SampleApp.Core.Migrations
{
    [DbContext(typeof(AccountContext))]
    partial class AccountContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SampleApp.Core.Entities.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            AccountId = 1,
                            ClientId = 1,
                            Sum = 1500m,
                            Type = 0
                        },
                        new
                        {
                            AccountId = 2,
                            ClientId = 1,
                            Sum = 2500m,
                            Type = 1
                        },
                        new
                        {
                            AccountId = 3,
                            ClientId = 1,
                            Sum = 2500m,
                            Type = 1
                        },
                        new
                        {
                            AccountId = 4,
                            ClientId = 2,
                            Sum = 3500m,
                            Type = 0
                        },
                        new
                        {
                            AccountId = 5,
                            ClientId = 2,
                            Sum = 2500m,
                            Type = 0
                        },
                        new
                        {
                            AccountId = 6,
                            ClientId = 3,
                            Sum = 1500m,
                            Type = 1
                        },
                        new
                        {
                            AccountId = 7,
                            ClientId = 4,
                            Sum = 2000m,
                            Type = 1
                        });
                });

            modelBuilder.Entity("SampleApp.Core.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("ClientId");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            ClientId = 1,
                            Age = 20,
                            Gender = 0,
                            Name = "TestClient1"
                        },
                        new
                        {
                            ClientId = 2,
                            Age = 30,
                            Name = "TestClient2"
                        },
                        new
                        {
                            ClientId = 3,
                            Age = 35,
                            Gender = 1,
                            Name = "TestClient3"
                        },
                        new
                        {
                            ClientId = 4,
                            Age = 40,
                            Gender = 0,
                            Name = "TestClient4"
                        },
                        new
                        {
                            ClientId = 5,
                            Age = 50,
                            Name = "TestClient5"
                        });
                });

            modelBuilder.Entity("SampleApp.Core.Entities.Account", b =>
                {
                    b.HasOne("SampleApp.Core.Entities.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
